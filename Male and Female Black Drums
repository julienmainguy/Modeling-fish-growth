library(FSA)
library(FSAdata)
library(nlme)
library(nlraa)
library(nlstools)
library(performance)
library(scam)

## NOTE: all the code details are mainly presented in the Female Haddocks R file

## The *BlackDrum2001* dataset from "FSAdata" are first imported into R as *bdmf*
## and then subsampled to remove a 51-year-old male and 61-year-old female, as
## performed by Ogle (2016), to then also only keep individuals of known sex.
## These steps lead to a reduced dataset of 34 females and 74 males.

data(BlackDrum2001) 
bdmf <- BlackDrum2001
bdmf <- bdmf[which(bdmf$otoage < 51),]
bdmf <- bdmf[which(bdmf$sex == "male" | bdmf$sex == "female"),]

Summarize(otoage ~ sex, data = bdmf)


## VON BERTALANFFY GROWTH MODEL (VBGM) #########################################

## Both sexes will be analyzed separately in a first time to describe their
## growth, either with the vBGM or alternative SCAM approach

bdm <- bdmf[which(bdmf$sex == "male"),]
bdf <- bdmf[which(bdmf$sex == "female"),]

## Find reasonable starting values

(sv_bdm_VBGM <- findGrowthStarts(tl ~ otoage,
                                 data = bdm,
                                 type="von Bertalanffy",
                                 plot=TRUE))

(sv_bdf_VBGM <- findGrowthStarts(tl ~ otoage,
                                 data = bdf,
                                 type="von Bertalanffy",
                                 plot=TRUE))


## Define the vBGM function

vB_fun <- makeGrowthFun(type = "von Bertalanffy")


## Fit sex-specific vBGMs in a nonlinear regression using the vB_fun() function 
## and the starting values for Linf, K, and t0 for each sex as obtained above

m_bdm_VBGM <- nls(tl ~ vB_fun(otoage, Linf, K, t0),
                  data = bdm, 
                  start = sv_bdm_VBGM)

m_bdf_VBGM <- nls(tl ~ vB_fun(otoage, Linf, K, t0),
                  data = bdf, 
                  start = sv_bdf_VBGM)


## Get the model summary output of parameter estimates and their correlation

summary(m_bdm_VBGM, correlation = TRUE)

summary(m_bdf_VBGM, correlation = TRUE)


## Check vBGM adequacy for male black drums by examining residuals

resid_bdm_VBGM <- nlsResiduals(m_bdm_VBGM)


## QQ plot of the standardized residuals (normality)

plot(resid_bdm_VBGM, which = 6)


## Histogram of the binned residuals (normality)

plot(resid_bdm_VBGM, which = 5)


## Shapiro-Wilk test on the standardized residuals (normality)

test.nlsResiduals(resid_bdm_VBGM)$alternative


## Diagnostic plot: standardized residuals vs. fitted values (homoscedasticity)

plot(resid_bdm_VBGM, which = 2)


## Check VBGM adequacy for female black drums by examining residuals

resid_bdf_VBGM <- nlsResiduals(m_bdf_VBGM)


## QQ plot of the standardized residuals (normality)

plot(resid_bdf_VBGM, which = 6)


## Histogram of the binned residuals (normality)

plot(resid_bdf_VBGM, which = 5)


## Shapiro-Wilk test on the standardized residuals (normality)

test.nlsResiduals(resid_bdf_VBGM)$alternative


## Diagnostic plot: standardized residuals vs. fitted values (homoscedasticity)

plot(resid_bdf_VBGM, which = 2)


## Estimation of the coefficient of determination (R2) with the R2M() function of
## "nlraa" expressed in percentage (%). These correspond to unadjusted R2's.

R2M(m_bdm_VBGM)$R2 * 100

R2M(m_bdf_VBGM)$R2 * 100


## Adjusted Mean Square Error (MSE_adj)

## Males

model <- m_bdm_VBGM
data <- bdm
length <- data$tl
n <- nrow(data)

pred <- predict(model, data)
obs_pred <- data.frame(data, pred)
obs_pred_resid <- transform(obs_pred, resid = length - pred)
obs_pred_resid2 <- transform(obs_pred_resid, resid2 = resid^2)
RSS <- sum(obs_pred_resid2$resid2)

logLik <- logLik(model)
P <- attributes(logLik)$df

MSE_adj_VBGM_bdm <- RSS / (n - P)


## Females

model <- m_bdf_VBGM
data <- bdf
length <- data$tl
n <- nrow(data)

pred <- predict(model, data)
obs_pred <- data.frame(data, pred)
obs_pred_resid <- transform(obs_pred, resid = length - pred)
obs_pred_resid2 <- transform(obs_pred_resid, resid2 = resid^2)
RSS <- sum(obs_pred_resid2$resid2)

logLik <- logLik(model)
P <- attributes(logLik)$df

MSE_adj_VBGM_bdf <- RSS / (n - P)


## Predictions of the vBGM

## Males

model <- m_bdm_VBGM 
nd <- data.frame(otoage = seq(min(bdm$otoage), max(bdm$otoage), by = 0.1))
age <- nd$otoage

estimate <- predict(model, nd)

boot_VBGM <- nlsBoot(model) 

vB_fun <- makeGrowthFun(type = "von Bertalanffy") ## identical function as above

CI_VBGM <- data.frame(predict(boot_VBGM,
                              vB_fun,
                              t = seq(min(bdm$otoage),
                                      max(bdm$otoage), 
                                      by = 0.1)))
lower_ci <- CI_VBGM$X95..LCI
upper_ci <- CI_VBGM$X95..UCI

pred_bdm_VBGM <- data.frame(age, estimate, lower_ci, upper_ci)


## Females

model <- m_bdf_VBGM 
nd <- data.frame(otoage = seq(min(bdf$otoage), max(bdf$otoage), by = 0.1))
age <- nd$otoage

estimate <- predict(model, nd)

boot_VBGM <- nlsBoot(model) 

vB_fun <- makeGrowthFun(type = "von Bertalanffy") ## identical function as above

CI_VBGM <- data.frame(predict(boot_VBGM,
                              vB_fun,
                              t = seq(min(bdf$otoage),
                                      max(bdf$otoage), 
                                      by = 0.1)))
lower_ci <- CI_VBGM$X95..LCI
upper_ci <- CI_VBGM$X95..UCI

pred_bdf_VBGM <- data.frame(age, estimate, lower_ci, upper_ci)


## SHAPE-CONSTRAINED ADDITIVE MODEL (SCAM) #####################################

## Males

m_bdm_SCAM <- scam(tl ~ s(otoage, bs = "micv"),
                   family = Gamma(link = "log"),
                   optimizer = "efs", 
                   data = bdm)

summary(m_bdm_SCAM)


## Females

m_bdf_SCAM <- scam(tl ~ s(otoage, bs = "micv"),
                   family = Gamma(link = "log"),
                   optimizer = "efs", 
                   data = bdf)

summary(m_bdf_SCAM)


## Model adequacy assessment with a QQ plot and simulated confidence band

qq.scam(m_bdm_SCAM, rep = 5000, level = 0.95, pch = 20)

qq.scam(m_bdf_SCAM, rep = 5000, level = 0.95, pch = 20)


## Estimate the in-sample predictive performance with the deviance explained (D2)
## and its adjusted version (D2_adj), as detailed in the main text

model <- m_bdm_SCAM

D2 <- 100 * (1 - model$deviance / model$null.deviance)
logLik <- logLik(model)
P <- attributes(logLik)$df
n <- summary(model)$n
D2_adj <- 100 - ((n - 1) / (n - P) * (100 - D2))
cbind(D2, D2_adj)


model <- m_bdf_SCAM

D2 <- 100 * (1 - model$deviance / model$null.deviance)
logLik <- logLik(model)
P <- attributes(logLik)$df
n <- summary(model)$n
D2_adj <- 100 - ((n - 1) / (n - P) * (100 - D2))
cbind(D2, D2_adj)


## Calculate the MSE_adj of the gamma SCAM

## Males

model <- m_bdm_SCAM
data <- bdm
length <- bdm$tl
n <- nrow(data)

pred <- predict(model, data, type = "response")
obs_pred <- data.frame(data, pred)
obs_pred_resid <- transform(obs_pred, resid = length - pred)
obs_pred_resid2 <- transform(obs_pred_resid, resid2 = resid^2)
RSS <- sum(obs_pred_resid2$resid2)

logLik <- logLik(model)
P <- attributes(logLik)$df

MSE_adj_SCAM_bdm <- RSS / (n - P)


## Females

model <- m_bdf_SCAM
data <- bdf
length <- bdf$tl
n <- nrow(data)

pred <- predict(model, data, type = "response")
obs_pred <- data.frame(data, pred)
obs_pred_resid <- transform(obs_pred, resid = length - pred)
obs_pred_resid2 <- transform(obs_pred_resid, resid2 = resid^2)
RSS <- sum(obs_pred_resid2$resid2)

logLik <- logLik(model)
P <- attributes(logLik)$df

MSE_adj_SCAM_bdf <- RSS / (n - P)


## Predictions of the gamma SCAM

## Males

model <- m_bdm_SCAM

nd <- data.frame(otoage = seq(min(bdm$otoage), max(bdm$otoage), by = 0.1))

fitted <- predict(model,
                  nd,
                  type = "link",
                  se.fit = TRUE)

estimate <- exp(fitted$fit)
lower_ci <- exp(fitted$fit - 1.96 * fitted$se.fit)
upper_ci <- exp(fitted$fit + 1.96 * fitted$se.fit)

pred_bdm_SCAM <- data.frame(nd, estimate, lower_ci, upper_ci)


## Females

model <- m_bdf_SCAM

nd <- data.frame(otoage = seq(min(bdf$otoage), max(bdf$otoage), by = 0.1))

fitted <- predict(model,
                  nd,
                  type = "link",
                  se.fit = TRUE)

estimate <- exp(fitted$fit)
lower_ci <- exp(fitted$fit - 1.96 * fitted$se.fit)
upper_ci <- exp(fitted$fit + 1.96 * fitted$se.fit)

pred_bdf_SCAM <- data.frame(nd, estimate, lower_ci, upper_ci)


## MODEL SELECTION ########################################################

## BIC

## Males

BIC(m_bdm_VBGM, m_bdm_SCAM)


## Females

BIC(m_bdf_VBGM, m_bdf_SCAM)


## MSE_adj: improvement from VBGM to SCAM (i.e., percentage of reduction)

## Males

(MSE_adj_VBGM_bdm - MSE_adj_SCAM_bdm) / MSE_adj_VBGM_bdm * 100


## Females

(MSE_adj_VBGM_bdf - MSE_adj_SCAM_bdf) / MSE_adj_VBGM_bdf * 100


## COMPARING TWO GROWTH CURVES: MALE AND FEMALE BLACK DRUMS ####################

## The four candidate models described in Table 1 of the main text will be fitted
## below. As for "mgcv" when fitting GAMs, "scam" requires that categorical variables
## are first identified as such when included as predictors, either as fixed or
## random effects

bdmf$sex <- as.factor(bdmf$sex)


## candidate model with a single intercept and slope: no between-sex differences
## _OAO: OtoAge Only

m_bdmf_SCAM_OAO <- scam(tl ~ 1 + s(otoage, bs = "micv"),
                        family = Gamma(link = "log"),
                        optimizer = "efs",
                        data = bdmf)

summary(m_bdmf_SCAM_OAO)


## candidate model with a single intercept but sex-specific growth curves (slopes)
## _COM: COMmon intercept

m_bdmf_SCAM_COM <- scam(tl ~ 1 + s(otoage, by = sex, bs = "micv"),
                        family = Gamma(link = "log"),
                        optimizer = "efs",
                        data = bdmf)

summary(m_bdmf_SCAM_COM)


## candidate model with the additive effects of otoage and sex (parralel growth curves)
## _ADD: ADDitive effects

m_bdmf_SCAM_ADD <- scam(tl ~ sex + s(otoage, bs = "micv"),
                        family = Gamma(link = "log"),
                        optimizer = "efs",
                        data = bdmf)

summary(m_bdmf_SCAM_ADD)


## candidate model with the multiplicative effects of otoage and sex
## _INT: INTeraction between otoage and sex

m_bdmf_SCAM_INT <- scam(tl ~ sex + s(otoage, by = sex, bs = "micv"),
                        family = Gamma(link = "log"),
                        optimizer = "efs",
                        data = bdmf)

summary(m_bdmf_SCAM_INT)


## The adequacy of each candidate gamma SCAM was tested with QQ plots, as described
## above (not shown), with all found to be sufficiently adequate. Model selection
## according to the Bayesian Information Criterion (BIC) is performed below. Note that the
## BIC() function does not rank models, but rather present their *equivalent-df* (see main text)
## and corresponding BIC scores in the same order that they were listed. Here, they are listed
## from the simplest (OAO) to most complex (INT) based on their expected required *df* which are
## not required to be integer-valued for the latter (i.e., combination of df and edf, see text)

BIC(m_bdmf_SCAM_OAO, m_bdmf_SCAM_ADD, m_bdmf_SCAM_COM, m_bdmf_SCAM_INT)


## Predictions of the candidate gamma SCAM that includes the additive effects of
## otoage and sex (ADD), which was identified as the top-ranking model based on BIC. 
## Below, the range of observed ages by sex is used to avoid extrapolation for
## the predicted values presented in Fig. 2c

nd_bdm <- data.frame(otoage = seq(min(bdm$otoage), max(bdm$otoage), by = 0.1), sex = "male")

nd_bdf <- data.frame(otoage = seq(min(bdf$otoage), max(bdf$otoage), by = 0.1), sex = "female")

nd <- rbind(nd_bdm, nd_bdf)

model <- m_bdmf_SCAM_ADD

fitted <- predict(model,
                  nd,
                  type = "link",
                  se.fit = TRUE)

estimate <- exp(fitted$fit)
lower_ci <- exp(fitted$fit - 1.96 * fitted$se.fit)
upper_ci <- exp(fitted$fit + 1.96 * fitted$se.fit)

predicted_bdmf_SCAM <- data.frame(nd, estimate, lower_ci, upper_ci)
